"""Initial

Revision ID: aeada8677ae1
Revises:
Create Date: 2023-10-06 19:26:15.666607

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'aeada8677ae1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('CREATE SCHEMA IF NOT EXISTS subscriptions;')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'subscription',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('on_delete', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        schema='subscriptions',
    )
    op.create_table(
        'tariff',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('subscription', sa.UUID(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('amount', sa.Numeric(precision=14, scale=2), nullable=False),
        sa.Column('currency', sa.String(length=3), nullable=False),
        sa.Column('duration', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['subscription'], ['subscriptions.subscription.id']),
        sa.PrimaryKeyConstraint('id'),
        schema='subscriptions',
    )
    op.create_table(
        'account',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('modified_at', sa.DateTime(), nullable=True),
        sa.Column('user', sa.UUID(), nullable=True),
        sa.Column('subscription', sa.UUID(), nullable=True),
        sa.Column('tariff', sa.UUID(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('invoice', sa.UUID(), nullable=True),
        sa.Column('status', sa.String(length=255), nullable=True),
        sa.Column('on_delete', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['subscription'], ['subscriptions.subscription.id']),
        sa.ForeignKeyConstraint(['tariff'], ['subscriptions.tariff.id']),
        sa.PrimaryKeyConstraint('id'),
        schema='subscriptions',
    )
    op.create_table(
        'account_status',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('account', sa.UUID(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(['account'], ['subscriptions.account.id']),
        sa.PrimaryKeyConstraint('id'),
        schema='subscriptions',
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('account_status', schema='subscriptions')
    op.drop_table('account', schema='subscriptions')
    op.drop_table('tariff', schema='subscriptions')
    op.drop_table('subscription', schema='subscriptions')
    # ### end Alembic commands ###
